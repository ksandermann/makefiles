# terraform executable. set as env variable to overwrite.
ifeq ($(TERRAFORM),)
	TERRAFORM = terraform
endif

# clean terraform working dir
clean:
	@rm -Rf .terraform

# clean modules. need to call make init or make update modules after this
clean-modules:
	@rm -Rf .terraform/modules

# clean plugins. need to call make init after this
clean-plugins:
	@rm -Rf .terraform/plugins

# force update the modules
update-modules: clean-modules
	@$(TERRAFORM) get -update

# format terraform files recursively
fmt:
	@$(TERRAFORM) fmt -recursive

# check the format
validate: validate-code
	@echo "==> Checking that code complies with terraform fmt requirements..."
	@$(TERRAFORM) fmt -check -recursive || (echo; echo "Please correct the files above"; echo; exit 1)
	@echo "==> Ok."

# validate code
validate-code: init
	@$(TERRAFORM) validate

# clean plugins and modules before init
force-init: clean init

# init backend config and modules if necessary
# if you get 'Plugin reinitialization required.' errors, call make force-init
# if you get 'Module not installed' errors, make update-modules should be sufficient
init:
	$(TERRAFORM) init

# format, validate the code and re-initialize
.DEFAULT_GOAL := default
default: fmt validate
